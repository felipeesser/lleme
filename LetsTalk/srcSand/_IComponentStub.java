/**
 * _IComponentStub.java . Generated by the IDL-to-Java compiler (portable),
 * version "3.2" from scs.idl Friday, December 9, 2005 9:35:21 PM GMT
 */

public class _IComponentStub extends org.omg.CORBA.portable.ObjectImpl
		implements IComponent {

	public org.omg.CORBA.Object getFacet(String facet_interface) {
		org.omg.CORBA.portable.InputStream $in = null;
		try {
			org.omg.CORBA.portable.OutputStream $out = _request("getFacet",
					true);
			$out.write_string(facet_interface);
			$in = _invoke($out);
			org.omg.CORBA.Object $result = org.omg.CORBA.ObjectHelper.read($in);
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex) {
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm) {
			return getFacet(facet_interface);
		} finally {
			_releaseReply($in);
		}
	} // getFacet

	public org.omg.CORBA.Object getFacetByName(String facet) {
		org.omg.CORBA.portable.InputStream $in = null;
		try {
			org.omg.CORBA.portable.OutputStream $out = _request(
					"getFacetByName", true);
			$out.write_string(facet);
			$in = _invoke($out);
			org.omg.CORBA.Object $result = org.omg.CORBA.ObjectHelper.read($in);
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex) {
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm) {
			return getFacetByName(facet);
		} finally {
			_releaseReply($in);
		}
	} // getFacetByName

	public void startup() throws StartupFailed {
		org.omg.CORBA.portable.InputStream $in = null;
		try {
			org.omg.CORBA.portable.OutputStream $out = _request("startup", true);
			$in = _invoke($out);
			return;
		} catch (org.omg.CORBA.portable.ApplicationException $ex) {
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			if (_id.equals("IDL:StartupFailed:1.0"))
				throw StartupFailedHelper.read($in);
			else
				throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm) {
			startup();
		} finally {
			_releaseReply($in);
		}
	} // startup

	public void shutdown() throws ShutdownFailed {
		org.omg.CORBA.portable.InputStream $in = null;
		try {
			org.omg.CORBA.portable.OutputStream $out = _request("shutdown",
					true);
			$in = _invoke($out);
			return;
		} catch (org.omg.CORBA.portable.ApplicationException $ex) {
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			if (_id.equals("IDL:ShutdownFailed:1.0"))
				throw ShutdownFailedHelper.read($in);
			else
				throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm) {
			shutdown();
		} finally {
			_releaseReply($in);
		}
	} // shutdown

	// Receptacle
	public int connect(String receptacle, org.omg.CORBA.Object obj)
			throws InvalidName, InvalidConnection, AlreadyConnected,
			ExceededConnectionLimit {
		org.omg.CORBA.portable.InputStream $in = null;
		try {
			org.omg.CORBA.portable.OutputStream $out = _request("connect", true);
			$out.write_string(receptacle);
			org.omg.CORBA.ObjectHelper.write($out, obj);
			$in = _invoke($out);
			int $result = ConnectionIdHelper.read($in);
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex) {
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			if (_id.equals("IDL:InvalidName:1.0"))
				throw InvalidNameHelper.read($in);
			else if (_id.equals("IDL:InvalidConnection:1.0"))
				throw InvalidConnectionHelper.read($in);
			else if (_id.equals("IDL:AlreadyConnected:1.0"))
				throw AlreadyConnectedHelper.read($in);
			else if (_id.equals("IDL:ExceededConnectionLimit:1.0"))
				throw ExceededConnectionLimitHelper.read($in);
			else
				throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm) {
			return connect(receptacle, obj);
		} finally {
			_releaseReply($in);
		}
	} // connect

	public void disconnect(int id) throws InvalidConnection, NoConnection {
		org.omg.CORBA.portable.InputStream $in = null;
		try {
			org.omg.CORBA.portable.OutputStream $out = _request("disconnect",
					true);
			ConnectionIdHelper.write($out, id);
			$in = _invoke($out);
			return;
		} catch (org.omg.CORBA.portable.ApplicationException $ex) {
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			if (_id.equals("IDL:InvalidConnection:1.0"))
				throw InvalidConnectionHelper.read($in);
			else if (_id.equals("IDL:NoConnection:1.0"))
				throw NoConnectionHelper.read($in);
			else
				throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm) {
			disconnect(id);
		} finally {
			_releaseReply($in);
		}
	} // disconnect

	public ConnectionDescription getConnection(int id) throws InvalidConnection {
		org.omg.CORBA.portable.InputStream $in = null;
		try {
			org.omg.CORBA.portable.OutputStream $out = _request(
					"getConnection", true);
			ConnectionIdHelper.write($out, id);
			$in = _invoke($out);
			ConnectionDescription $result = ConnectionDescriptionHelper
					.read($in);
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex) {
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			if (_id.equals("IDL:InvalidConnection:1.0"))
				throw InvalidConnectionHelper.read($in);
			else
				throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm) {
			return getConnection(id);
		} finally {
			_releaseReply($in);
		}
	} // getConnection

	public ConnectionDescription[] getConnections(String receptacle)
			throws InvalidName {
		org.omg.CORBA.portable.InputStream $in = null;
		try {
			org.omg.CORBA.portable.OutputStream $out = _request(
					"getConnections", true);
			$out.write_string(receptacle);
			$in = _invoke($out);
			ConnectionDescription $result[] = ConnectionDescriptionsHelper
					.read($in);
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex) {
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			if (_id.equals("IDL:InvalidName:1.0"))
				throw InvalidNameHelper.read($in);
			else
				throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm) {
			return getConnections(receptacle);
		} finally {
			_releaseReply($in);
		}
	} // getConnections

	// MetaInterface
	public FacetDescription[] getFacets() {
		org.omg.CORBA.portable.InputStream $in = null;
		try {
			org.omg.CORBA.portable.OutputStream $out = _request("getFacets",
					true);
			$in = _invoke($out);
			FacetDescription $result[] = FacetDescriptionsHelper.read($in);
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex) {
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm) {
			return getFacets();
		} finally {
			_releaseReply($in);
		}
	} // getFacets

	public FacetDescription[] getFacetsByName(String[] names)
			throws InvalidName {
		org.omg.CORBA.portable.InputStream $in = null;
		try {
			org.omg.CORBA.portable.OutputStream $out = _request(
					"getFacetsByName", true);
			NameListHelper.write($out, names);
			$in = _invoke($out);
			FacetDescription $result[] = FacetDescriptionsHelper.read($in);
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex) {
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			if (_id.equals("IDL:InvalidName:1.0"))
				throw InvalidNameHelper.read($in);
			else
				throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm) {
			return getFacetsByName(names);
		} finally {
			_releaseReply($in);
		}
	} // getFacetsByName

	public ReceptacleDescription[] getReceptacles() {
		org.omg.CORBA.portable.InputStream $in = null;
		try {
			org.omg.CORBA.portable.OutputStream $out = _request(
					"getReceptacles", true);
			$in = _invoke($out);
			ReceptacleDescription $result[] = ReceptacleDescriptionsHelper
					.read($in);
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex) {
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm) {
			return getReceptacles();
		} finally {
			_releaseReply($in);
		}
	} // getReceptacles

	public ReceptacleDescription[] getReceptaclesByName(String[] names)
			throws InvalidName {
		org.omg.CORBA.portable.InputStream $in = null;
		try {
			org.omg.CORBA.portable.OutputStream $out = _request(
					"getReceptaclesByName", true);
			NameListHelper.write($out, names);
			$in = _invoke($out);
			ReceptacleDescription $result[] = ReceptacleDescriptionsHelper
					.read($in);
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex) {
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			if (_id.equals("IDL:InvalidName:1.0"))
				throw InvalidNameHelper.read($in);
			else
				throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm) {
			return getReceptaclesByName(names);
		} finally {
			_releaseReply($in);
		}
	} // getReceptaclesByName

	// Type-specific CORBA::Object operations
	private static String[] __ids = { "IDL:IComponent:1.0" };

	public String[] _ids() {
		return (String[]) __ids.clone();
	}

	private void readObject(java.io.ObjectInputStream s)
			throws java.io.IOException {
		String str = s.readUTF();
		String[] args = null;
		java.util.Properties props = null;
		org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init(args, props)
				.string_to_object(str);
		org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)
				._get_delegate();
		_set_delegate(delegate);
	}

	private void writeObject(java.io.ObjectOutputStream s)
			throws java.io.IOException {
		String[] args = null;
		java.util.Properties props = null;
		String str = org.omg.CORBA.ORB.init(args, props).object_to_string(this);
		s.writeUTF(str);
	}
} // class _IComponentStub
