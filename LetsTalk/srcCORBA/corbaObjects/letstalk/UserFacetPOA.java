package corbaObjects.letstalk;

/**
 * corbaObjects/letstalk/UserFacetPOA.java . Generated by the IDL-to-Java
 * compiler (portable), version "3.2" from letstalk.idl Sexta-feira, 9 de
 * Dezembro de 2005 18h26min29s BRST
 */

public abstract class UserFacetPOA extends org.omg.PortableServer.Servant
		implements corbaObjects.letstalk.UserFacetOperations,
		org.omg.CORBA.portable.InvokeHandler {

	// Constructors

	private static java.util.Hashtable _methods = new java.util.Hashtable();
	static {
		_methods.put("subscribe", new java.lang.Integer(0));
		_methods.put("connect", new java.lang.Integer(1));
		_methods.put("disconnect", new java.lang.Integer(2));
		_methods.put("listUsers", new java.lang.Integer(3));
	}

	public org.omg.CORBA.portable.OutputStream _invoke(String $method,
			org.omg.CORBA.portable.InputStream in,
			org.omg.CORBA.portable.ResponseHandler $rh) {
		org.omg.CORBA.portable.OutputStream out = null;
		java.lang.Integer __method = (java.lang.Integer) _methods.get($method);
		if (__method == null)
			throw new org.omg.CORBA.BAD_OPERATION(0,
					org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

		switch (__method.intValue()) {
		case 0: // corbaObjects/letstalk/UserFacet/subscribe
		{
			try {
				String login = in.read_string();
				String password = in.read_string();
				this.subscribe(login, password);
				out = $rh.createReply();
			} catch (corbaObjects.letstalk.InvalidSubscriptionValues $ex) {
				out = $rh.createExceptionReply();
				corbaObjects.letstalk.InvalidSubscriptionValuesHelper.write(
						out, $ex);
			} catch (corbaObjects.scs.InternalError $ex) {
				out = $rh.createExceptionReply();
				corbaObjects.scs.InternalErrorHelper.write(out, $ex);
			}
			break;
		}

		case 1: // corbaObjects/letstalk/UserFacet/connect
		{
			try {
				String login = in.read_string();
				String password = in.read_string();
				org.omg.CORBA.Object host = org.omg.CORBA.ObjectHelper.read(in);
				int $result = 0;
				$result = this.connect(login, password, host);
				out = $rh.createReply();
				out.write_ulong($result);
			} catch (corbaObjects.scs.InvalidName $ex) {
				out = $rh.createExceptionReply();
				corbaObjects.scs.InvalidNameHelper.write(out, $ex);
			} catch (corbaObjects.scs.InvalidConnection $ex) {
				out = $rh.createExceptionReply();
				corbaObjects.scs.InvalidConnectionHelper.write(out, $ex);
			} catch (corbaObjects.scs.AlreadyConnected $ex) {
				out = $rh.createExceptionReply();
				corbaObjects.scs.AlreadyConnectedHelper.write(out, $ex);
			} catch (corbaObjects.scs.ExceededConnectionLimit $ex) {
				out = $rh.createExceptionReply();
				corbaObjects.scs.ExceededConnectionLimitHelper.write(out, $ex);
			} catch (corbaObjects.scs.InternalError $ex) {
				out = $rh.createExceptionReply();
				corbaObjects.scs.InternalErrorHelper.write(out, $ex);
			}
			break;
		}

		case 2: // corbaObjects/letstalk/UserFacet/disconnect
		{
			try {
				String login = in.read_string();
				this.disconnect(login);
				out = $rh.createReply();
			} catch (corbaObjects.scs.InvalidConnection $ex) {
				out = $rh.createExceptionReply();
				corbaObjects.scs.InvalidConnectionHelper.write(out, $ex);
			} catch (corbaObjects.scs.NoConnection $ex) {
				out = $rh.createExceptionReply();
				corbaObjects.scs.NoConnectionHelper.write(out, $ex);
			} catch (corbaObjects.scs.InternalError $ex) {
				out = $rh.createExceptionReply();
				corbaObjects.scs.InternalErrorHelper.write(out, $ex);
			}
			break;
		}

		case 3: // corbaObjects/letstalk/UserFacet/listUsers
		{
			try {
				String $result[] = null;
				$result = this.listUsers();
				out = $rh.createReply();
				corbaObjects.letstalk.stringListHelper.write(out, $result);
			} catch (corbaObjects.scs.InternalError $ex) {
				out = $rh.createExceptionReply();
				corbaObjects.scs.InternalErrorHelper.write(out, $ex);
			}
			break;
		}

		default:
			throw new org.omg.CORBA.BAD_OPERATION(0,
					org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
		}

		return out;
	} // _invoke

	// Type-specific CORBA::Object operations
	private static String[] __ids = { "IDL:corbaObjects/letstalk/UserFacet:1.0" };

	public String[] _all_interfaces(org.omg.PortableServer.POA poa,
			byte[] objectId) {
		return __ids.clone();
	}

	public UserFacet _this() {
		return UserFacetHelper.narrow(super._this_object());
	}

	public UserFacet _this(org.omg.CORBA.ORB orb) {
		return UserFacetHelper.narrow(super._this_object(orb));
	}

} // class UserFacetPOA
